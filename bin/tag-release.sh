#!/usr/bin/env bash

# Tag the current HEAD as a release.

set -e

print_help() {
  cat >&2 <<EOF
tag-release.sh

Tag the current HEAD as a release.

If a tag is not supplied, one is automatically generated by fetching the latest
version from 'go list' and adding '-beta.1' to the end. This suffix is to
ensure that our tag doesn't collide with a release tag from upstream.

For more information on how go versions are formatted, see:

    https://go.dev/doc/modules/version-numbers

Arguments
  -a TAG, --tag TAG    Set the tag name.

Example use:

  $ ./bin/tag-release.sh --help         # prints this message
  $ ./bin/tag-release.sh                # tags the current HEAD with the default tag
  $ ./bin/tag-release.sh --tag v4.16.0  # tags the current HEAD with v4.16.0
EOF
}

TAG=''

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help)
      print_help
      exit 0
      ;;
    -a|--tag)
      TAG="$2"
      shift
      shift
      ;;
    *)
      print_help
      exit 1
      ;;
  esac
done

if [ -z "${TAG}" ]; then
  TAG="$(go list -m -versions -json github.com/golang-migrate/migrate/v4 | jq -r '.Versions[-1]')-beta.1"
fi

echo "$ git tag -a '${TAG}' -m 'Release ${TAG}'"

git tag -a "${TAG}" -m "Release ${TAG}"
